#summary description of Kilroy bot in aigamedev.com CTF competition

If you find the below info or code useful or have comments/questions, feel free to post a comment below or send email with 'kilroy' in subject line to jeremy.cothran@gmail.com

<wiki:toc max_depth="6">

= Source & Description = 

commander code at

http://code.google.com/p/sqlitebot/source/browse/trunk/aigamedev_ctf/kilroy.py

This 'kilroy' bot/commander is a simple first attempt at something past the example commanders given in examples.py

Did a competition between all the example bots and 'Balanced' came out on top by far, probably because of the advanced goal flanking behavior.

Started with Defender commander and added some adaptations to help it track visible enemies and look towards killed teammates to help make it a better contender, then added Balanced commanders flanking method to the currently single attacker on the team and the flanking allows it to come out ahead on scores.

= Sharing development = 

I'm interested to see what an open team-based approach can do in regards to this contest AI and ongoing - particularly if/when a version of the contest might be adapted to other gametypes like deathmatch or include human players.

If you have improvements you want to incorporate and share, I'm interested to incorporate and promote where competitions.py results show a marked improvement or increase in the official rankings.  Feel free to copy and branch the code as needed and can discuss merging as needed.  Will post a credits wiki page, highlighting any contributions.

----
= Development ideas = 

lines in bold are next priority for development and testing

----
breakout team into squads with command board - offense, defense, scramble

*==individual bot - additional structure variables*

role - attack, defend, scramble

timeLastCommand - time last command for cooldowns

targetTrack - name of enemy bot tracking

nested dictionary = perl hash?
http://www.devshed.com/c/a/Python/The-Dictionary-Python-Object-Type/2/

----

pair or more offense to break through lines - first might die, but second avenges and breaks through

ambush on choke points for defense, offense

use cover for movement, facing, heatmap

use offense to scout - can see direction and use calculated enemy los or predicted movement+los to pathfind where not to be found or distract enemy in needed direction for traps or to get flag

use knowledge of deaths/respawn, team count to change tactics where man advantage

*simple move-behind - track enemy distance/angle vs self to move out of viewing angle or behind - in paired coordinated movement with enemy reaction, kill enemy(s) not facing between pair*

  * scrambling bots could ‘charge’ down attacking bots/runners from cover/behind

----
*4 defenders - default 4 direction facing for open flag?*

*assign nearest defending individual to tracking closest enemy threat - one defense per enemy unit, move defend facing angle if current facing greater than some x(radians? degrees?)*

if lose attacker by wall or distance while tracking - start longer cooldown wait to defense reset

----

use los calculations to specify where to position(cover) and *not* to look/scan on defense

on dropped flag(killed flag runner) - re-evaluate goal command
  double-check to see flanking goal is flag location and not flagbase for dropped flag

when runners killed mark high-level grid area and avoid area if consistently killed

runners try random setup locations around enemy flag(direction/radius) to probe weaknesses, repeat/avoid based on success/failure