#summary database schema

= Diagram =

http://sqlitebot.googlecode.com/files/sqlitebot_schema.jpg

*Table of Contents*
<wiki:toc max_depth="6">

= Schema/Table description =

All tables use a simple autocount *row_id* as the primary key reference.  Each row also has a *row_entry_date* which is the system/real-world time.

Some table may also include a *gametime* which is the internal game/tick time and *map_level* which is the identifier for the current map being played.

----
== bot ==
  * name - name of the bot
  * skill - skill level of the bot (1-7)
  * skin - character skin for the bot
  * team - team number for bot (0-255)
  * available - is bot available for play? 0=no(in play), 1=yes
  * location - current bot location(x,y,z) on map (updated every 3 seconds by refreshInfo function)
  * status - bot status code (attacking,defending,etc)

----
== unit_to_squad ==
  * unit_name - name of unit(bot/player)
  * bot - 0=unit is not a bot, 1=unit is a bot
  * squad_name - name of squad bot belongs to 

----
== squad ==
  * squad_name - name of squad
  * type - strategic/tactical type of squad(like infantry,armor,etc)
  * skin - character skin associated with this squad
  * player_assoc - player this squad is associatiod with

----
== command ==
  * gametime_given - gametime the command was issued
  * gametime_expire - gametime after which the command is no longer in action
  * status - 0=active, 1=inactive
  * given_by - name handle for whom the command was given by
  * level - level of command, currently level 2=higher/strategic level(hunt/follow), level 1=reactive level(no_engage)
  * priority - priority order of command where lower real number equals higher priority
  * squad_name - name of squad command applies to
  * command - various high and low level commands (hunt,follow,no_engage,etc)
  * target - target name the command references (bot/player name)
  * location - (x,y,z) location the command references
  * radius - UU(unreal unit) radius for successfully reaching target/location point

----
== system_settings ==
  * manual_spawn - 0=bots respawn automatically, 1=bots are manually spawned by outside process
  * behavior(this column will probably be renamed 'gametype') - what gametype are we playing

----
== last_seen ==
  * location - last sighted location(x,y,z) of target 
  * unit_name - name of target
  * bot - 0=target is not a bot, 1=target is a bot
  * report_by_unit - name of reporting unit
  * report_by_squad - name of reporting unit associated squad

----
== kill_score ==
  * killed_name - name of bot/player killed
  * killed_location - location(x,y,z) of bot/player killed
  * damage_type(not shown) - type of damage involved with kill
  * killer_name - name of killing bot/player (if available)
  * killer_location - location(x,y,z) of bot/player (if available)
----
= Sample table rows = 

{{{
insert into command(status,level,priority,squad_name,command,target) values (0,2,1.0,'gonzo.roam','hunt','jerr');
insert into command(status,level,priority,squad_name,command) values (0,1,1.0,'gonzo','engage');
insert into command(status,level,priority,squad_name,command) values (0,1,1.0,'gonzo','pursue');

update command set status=0 where row_id=5;

sqlite> select * from command;
2||||0|||2|1.0|gonzo|hunt|jerr||
4||||0|||1|1.0|gonzo.roam|no_engage|||
5||||0|||2|1.0|gonzo.roam|hunt|jerr||
6||||0|||1|1.0|gonzo|no_engage|||
7||||0|||2|0.5|gonzo|follow|ralph||
}}}

{{{
==level 1
engage, no_engage
pursue, no_pursue

==level 2
halt
hunt(player/last_seen), target
follow(bot), target
}}}